/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Reviewer as PrismaReviewer } from "@prisma/client";

export class ReviewerServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ReviewerCountArgs, "select">): Promise<number> {
    return this.prisma.reviewer.count(args);
  }

  async reviewers(
    args: Prisma.ReviewerFindManyArgs
  ): Promise<PrismaReviewer[]> {
    return this.prisma.reviewer.findMany(args);
  }
  async reviewer(
    args: Prisma.ReviewerFindUniqueArgs
  ): Promise<PrismaReviewer | null> {
    return this.prisma.reviewer.findUnique(args);
  }
  async createReviewer(
    args: Prisma.ReviewerCreateArgs
  ): Promise<PrismaReviewer> {
    return this.prisma.reviewer.create(args);
  }
  async updateReviewer(
    args: Prisma.ReviewerUpdateArgs
  ): Promise<PrismaReviewer> {
    return this.prisma.reviewer.update(args);
  }
  async deleteReviewer(
    args: Prisma.ReviewerDeleteArgs
  ): Promise<PrismaReviewer> {
    return this.prisma.reviewer.delete(args);
  }
}
